<#@ template language="C#" hostspecific="true"#>
<#@ import namespace="System" #>
<#@ import namespace="System.Data" #>
<#
    const string SrcCon = @"Data Source=.\sqlexpress;Initial Catalog=WgkOvl_Omz;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;";
    const string SrcConName = "WgkOvl_Omz";
    const string DestCon = @"Data Source=.\sqlexpress;Initial Catalog=Staging;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;";
    const string DestConName = "Staging";
#>
<Biml xmlns="http://schemas.varigence.com/biml.xsd">
      <Connections>
            <OleDbConnection Name="<#=SrcConName#>" ConnectionString="<#=SrcCon#>" CreateInProject="true"/>
            <OleDbConnection Name="<#=DestConName#>" ConnectionString="<#=DestCon#>" CreateInProject="true"/>
      </Connections>
      <Packages>
            <# 
                const string queryAllTablesSrc = @"
                    SELECT t.name 
                    FROM sys.tables t 
                        INNER JOIN sys.schemas s on t.schema_id = s.schema_id
                    WHERE s.name = 'dbo'
                ";
                const string queryAllTablesDest = @"
                    SELECT t.name 
                    FROM sys.tables t 
                        INNER JOIN sys.schemas s on t.schema_id = s.schema_id
                    WHERE s.name = 'ins'
                ";
                const string queryAllIsVerwijderdTables = @"
                    SELECT DISTINCT t.name
                    FROM sys.columns c
                    	INNER JOIN sys.tables t ON c.object_id = t.object_id
                        INNER JOIN sys.schemas s on t.schema_id = s.schema_id
                    WHERE s.name = 'dbo'
                        AND c.name = 'IsVerwijderd'
                ";
                // src tables
                DataTable srcTables = ExternalDataAccess.GetDataTable(SrcCon, queryAllTablesSrc);
                var srcTableSet = new HashSet<string>();
                foreach (DataRow row in srcTables.Rows)
                {
                    srcTableSet.Add((string)row[0]);
                }
                // soft del tables
                DataTable isDelTables = ExternalDataAccess.GetDataTable(SrcCon, queryAllIsVerwijderdTables);
                var delTableSet = new HashSet<string>();
                foreach (DataRow row in isDelTables.Rows)
                {
                    delTableSet.Add((string)row[0]);
                }
                // dest tables
                DataTable tables = ExternalDataAccess.GetDataTable(DestCon, queryAllTablesDest);
                foreach (DataRow row in tables.Rows)
                { 
                    if(!srcTableSet.Contains((string)row[0])){
                        continue; // should exist in both databases
                    }
                    DataTable columns = ExternalDataAccess.GetDataTable(DestCon, 
                        @"SELECT c.name FROM sys.columns c WHERE object_id = OBJECT_ID('ins."+((string)row[0])+"')");
                    var prefix = ((string)row[0]).ToLower() [0];
                    var komma = " ";
                    var addWhere = "";
                    if(delTableSet.Contains((string)row[0]))
                    {
                        addWhere = @"
WHERE "+prefix+@".IsVerwijderd = 0";
                    }
                #>
            <Package Name="Extract.Data.<#=row[0]#>" ConstraintMode="Linear" AutoCreateConfigurationsType="None">
                  <Tasks>
                        <Dataflow Name="Copy Data <#=row[0]#>"> 
                              <Transformations>
                                    <OleDbSource Name="<#=SrcConName#> In" ConnectionName="<#=SrcConName#>">
                                          <DirectInput>SELECT 
<#
foreach(DataRow col in columns.Rows)
  {
    if(string.Equals(col[0],"RowUId")){
        continue; // Ignore RowUId
    }
    #> <#=komma#> <#=prefix#>.[<#=col[0]#>]
<#
    komma = ",";
  }
#>FROM dbo.[<#=row[0]#>] <#=prefix#><#=addWhere#></DirectInput>
                                    </OleDbSource>
                                    <OleDbDestination Name="<#=DestConName#> Out" 
                                        ConnectionName="<#=DestConName#>"
                                        TableLock="false"
                                        UseFastLoadIfAvailable="true">
                                <ExternalTableOutput Table="outs.[<#=row[0]#>]"/>
                                    </OleDbDestination>
                              </Transformations>
                        </Dataflow>
                  </Tasks>
            </Package>
                <# } #>
      </Packages>
</Biml>